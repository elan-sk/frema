// Gradients
@mixin background-gradient($start-color, $end-color, $orientation) {
  background: $start-color;

  @if $orientation == 'vertical' {
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
    background: linear-gradient(to right, $start-color, $end-color);
  } @else if $orientation == 'half' {
    background: linear-gradient(to left, $start-color 50%, $end-color 50%);
  } @else {
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

@mixin container($width:1140px) {
  width: 100%;
  padding-right: rem(15px);
  padding-left: rem(15px);
  margin-right: auto;
  margin-left: auto;
  max-width: #{$width};
}

// Define vertical, horizontal, or both position
@mixin center($position) {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

@mixin bgcover {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}

@mixin coverAbsolute ($z:0) {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: $z;
}

@mixin coverFixed ($z) {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: $z;
}


@mixin bgparallax {
  background-attachment: fixed;
  background-size: cover;
  background-position: center top;
}

@mixin iconBg($path, $size:100%) {
  display: block;
  background-image: url($path);
  background-size: $size;
  background-repeat: no-repeat;
  background-position: center center;
  text-indent: -999999px;
  font-size: 0;
  overflow: hidden;
}

// Clearfix mixin
%clearfix {
  *zoom: 1;

  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}

// Define default font size
@function rem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font($size) {
  font-size: $size;
  font-size: rem($size);
}

// Placeholders
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content
  }

  &:-moz-placeholder {
    @content
  }

  &::-moz-placeholder {
    @content
  }

  &:-ms-input-placeholder {
    @content
  }
}

@mixin fluid-aspect($ratio: 1 1, $selector: "> :first-child") {
	$selector: unquote($selector);

	padding-bottom: percentage(nth($ratio, 2) / nth($ratio, 1));
	position: relative;

	#{$selector} {
		left: 0;
		height: 100%;
		position: absolute;
		top: 0;
    width: 100%;
    object-fit: cover;
	}
}
